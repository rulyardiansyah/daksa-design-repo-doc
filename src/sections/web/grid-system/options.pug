//
   Created by rulyardiansyah on 1/16/2017.

//- WEB-DESKTOP - GRID-SYSTEM - options.pug
doctype html
html.no-js(lang="")
  include ../../_include/_header
  body
    <!--[if lt IE 8]>
    p(class="browserupgrade") You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.
    <![endif]-->

    // CONTENTS SHOULD BEGINS HERE

    .container
      header.header.fixed
        a(href="#menu") <span></span>
      section.content#content
        article
          h1 Options
          p If you had noticed, in previous chapter you see <code>@include column(1/3)</code> and <code>@include center(960px)</code> inside the Sass sample file, which is not a standard syntax on CSS. What is it? What does this actually do? Please scroll through. Those are options that are built in inside DGS. All the available options, or mixins to be exact, will be explained here.
          p Currently, there are 13 options are available within DGS. Due to its development progress, DAKSA Design Team still not sure whether these options will be expanded or even shrinked down.
          .panel
            header
              h4 this_is_the_mixins_name
              p Parameter(s): <em>all-the-parameters-written-here</em>
            article
              p This is the description.

        hr.article-separator

        article
          .panel
            header
              h4 align
              p Parameter(s): <code>($direction: both)</code>
            article
              p Aligning blocks relative to their container (so their parent container needs <code>position: relative</code>) with <code>position:</code> absolute and fancy positioning and transform. Vertical alignment is now trivial in IE9+ browsers.

          br

          .panel
            header
              h4 center
              p Parameter(s): <code>($max-width: map-get($jeet, 'max-width'), $pad: 0)</code>
            article
              p This is a shortcut to easily center containers. The pad variable sets padding on the left and right.

          br

          .panel
            header
              h4 clearfix
              p Parameter(s): <em>No parameter</em>
            article
              p A simple/kinda-modern clearfix. Use this to wrap any set of <code>column()</code>s or <code>span()</code>s. If you need super-old browser support, you can create your own clearfix mixin (use the <code>clearfix</code> namespace) with stuff like <code>:before</code> and <code>*zoom: 1</code> (look up an old clearfix).

          br

          .panel
            header
              h4 column
              p Parameter(s): <code>($ratios: 1, $offset: 0, $cycle: 0, $gutter: map-get($jeet, 'gutter'))</code>
            article
              p Specify an initial ratio, either as fractions or decimals, then pass the parent container's context ratio to maintain consistent gutters as you nest.
              p Specify a ratio to make your offset have a margin-left. Make it negative to give it a margin-right instead. e.g. <code>column(1/4, $offset: 1/4)</code> would create a column the quarter of the size of its container and push it to the right a quarter.
              p Understanding cycle is important. Want to make a gallery but don't want to have a <code>&lt;div class="row"&gt;</code> every 4 pictures? <code>column(1/4, $cycle: 4)</code> - done.
              p Want to change it up when you get down to mobile? Maybe just show 2 images per row? <code>column(1/2, $cycle: 2)</code> - done.
              p Need to adjust column gutters for a specific container? <code>col(1/4, $gutter: .5)</code>. Note the gutter isn't a fixed width.

          br

          .panel
            header
              h4 column-gutter
              p Parameter(s): <code>($ratios: 1, $gutter: map-get($jeet, 'gutter'))</code>
            article
              p A function that returns the gutter size.

          br

          .panel
            header
              h4 column-width
              p Parameter(s): <code>($ratios: 1, $gutter: map-get($jeet, 'gutter'))</code>
            article
              p A function to return strictly the column width with none of the styles.

          br

          .panel
            header
              h4 debug
              p Parameter(s): <code>($color: blue, $important: false)</code>
            article
              p Debug mode assigns a lightly translucent background to every element on the page. It's a little trick picked up over the years that makes visualizing the structure of your site trivial.

          br

          .panel
            header
              h4 move
              p Parameter(s): <code>($ratios: 0, $col-or-span: column, $gutter: map-get($jeet, 'gutter'))</code>
            article
              p Source ordering works in Jeet by assigning <code>position: relative</code>and then a <code>left</code> offset equal to the ratio passed.
              p You can specify if this is a column or span movement to include gutters or not. This works similar to <code>offset</code> in that it can accept negative values to shift the other direction.
              p <code>move</code> can accept multiple context ratios to maintain perfect nested sizing. <code>move</code> also accepts custom gutter sizing, just make sure your gutter sizes match the gutter sizes of your original elements.

          br

          .panel
            header
              h4 span
              p Parameter(s): <code>($ratio: 1, $offset: 0, $cycle: 0)</code>
            article
              p Need a grid without the gutters? For instance, for a horizontal navigation where you want buttons touching. Do so with <code>span(1/5)</code>. No need to pass more than one ratio since we don't need to worry about the math involved with gutters and all that.

          br

          .panel
            header
              h4 stack
              p Parameter(s): <code>($pad: 0, $align: false)</code>
            article
              p A helper mixin to "stack" elements on top of each other. Useful for mobile views. Accepts padding and/or text alignment.

          br

          .panel
            header
              h4 uncenter
              p Parameter(s): <em>No parameter</em>
            article
              p Resets styles associated with <code>center()</code>.

          br

          .panel
            header
              h4 unmove
              p Parameter(s): <em>No parameter</em>
            article
              p Accepts no values. <code>unmove()</code> is a great helper function to quickly disable whatever source ordering you've done to an element.

          br

          .panel
            header
              h4 unstack
              p Parameter(s): <em>No parameter</em>
            article
              p Cancel that <code>stack()</code>. This won't revert back to your <code>column()</code> calls. For that, manually call your <code>column()</code> method again.

      footer.section-nav-chapter
        nav.prev-chapter
          h4 Prev chapter
          a(href="installation-usage.html") Installation &amp; Usage
        nav.next-chapter
          h4 Next chapter
          a(href="../front-end/skeletons.html") Skeletons

    // NAVIGATION begins here
    include ../../_include/_menu
    // NAVIGATION ends here

    // CONTENTS SHOULD BEGINS HERE

  include ../../_include/_footer

  script.
    $("#grid-system-options").addClass("mm-selected");